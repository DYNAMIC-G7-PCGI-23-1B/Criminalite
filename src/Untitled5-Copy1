{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import random\n",
    "import matplotlib.pyplot as plt\n",
    "import math\n",
    "\n",
    "temps=30 #nombre de mois \n",
    "largeur=50 #de notre monde\n",
    "longueur=50 #de notre monde\n",
    "seuil=10\n",
    "police_rate=5\n",
    "criminal_rate=10\n",
    "\n",
    "class Individu:\n",
    "    \n",
    "    def __init__(self,identifiant,x,y,proba_crime,number_crime):\n",
    "        self.identifiant = identifiant\n",
    "        self.x=x\n",
    "        self.y=y\n",
    "        self.proba_crime=proba_crime\n",
    "        self.number_crime=number_crime\n",
    "    def act(self):\n",
    "        print(self.identifiant)\n",
    "        \n",
    "def ratio_police_civil():\n",
    "    return random.choices(['police','civil'],weights=(police_presence,100-police_presence),k=1)\n",
    "    \n",
    "\n",
    "def generate_random_individual(i,j):\n",
    "    \n",
    "    proba_crime=sum((random.choices(np.arange(0,1.01,0.01), weights=[math.exp(100-i) for i in np.arange(0,10.1,0.1)], k=1)))\n",
    "    number_crime=0\n",
    "    return Individu('civil',i,j,proba_crime,number_crime)\n",
    "\n",
    "generate_random_individual(1,2).__dict__\n",
    "\n",
    "def generate_spatial_world(longueur,largeur,criminals,location):\n",
    "    ''''''\n",
    "    l=[]\n",
    "    world=[]\n",
    "    a=100//criminal_rate\n",
    "    b=0\n",
    "    \n",
    "    for i in range (0,longueur):\n",
    "        for j in range(0,largeur):\n",
    "            l.append(generate_random_individual(i,j))\n",
    "        \n",
    "        world.append(l)\n",
    "        l=[]\n",
    "    \n",
    "                    \n",
    "            \n",
    "    \n",
    "    return world\n",
    "\n",
    "def MAP(world,cle):\n",
    "    A=[]\n",
    "    l=[]\n",
    "    for i in world:\n",
    "        for j in i:\n",
    "            l.append(j.__dict__[cle])\n",
    "        A.append(l)\n",
    "        l=[]\n",
    "    return A\n",
    "\n",
    "def action(individual):\n",
    "    \n",
    "    return sum(random.choices([1,0], weights=(individual.__dict__['proba_crime'],1-individual.__dict__['proba_crime']),k=1)+[individual.__dict__['number_crime']])\n",
    "\n",
    "def crimes_comitted(world,time):\n",
    "    t=0\n",
    "    while t!=time:\n",
    "        for i in range (len(world)):\n",
    "            for j in range (len(world[i])):\n",
    "                if world[i][j].__dict__['identifiant']=='civil':\n",
    "                    if t==0:\n",
    "                        for l in proximity(i,j,world):\n",
    "                            if l.__dict__['identifiant']=='police':\n",
    "                                world[i][j].__dict__['proba_crime']=world[i][j].__dict__['proba_crime']/2\n",
    "                                if world[i][j].__dict__['number_crime']>seuil:\n",
    "                                    world[i][j]=generate_random_individual(i,j)\n",
    "\n",
    "                    if world[i][j].__dict__['number_crime']<action(world[i][j]):\n",
    "                        world[i][j].__dict__['number_crime']=action(world[i][j])\n",
    "                        \n",
    "                        for k in proximity(i,j,world):\n",
    "                            if k.__dict__['identifiant']=='civil':\n",
    "                                k.__dict__['proba_crime']=k.__dict__['proba_crime']*(1.05)\n",
    "\n",
    "\n",
    "        t=t+1\n",
    "    return (world)\n",
    "                \n",
    "                \n",
    "def neighboors(line,p):\n",
    "    ''''''\n",
    "    LR=[]\n",
    "    return [line[i] for i in range(max(0,p-1),min(len(line),p+2)) if i!=p]\n",
    "\n",
    "\n",
    "def proximity(p,q,world):\n",
    "    ''''''\n",
    "    L=[]\n",
    "    for i in range (0,len(world)):\n",
    "        L.append(world[i][q]) \n",
    "    \n",
    "    L_neighboors=[]\n",
    "    L_neighboors=L_neighboors+(neighboors(L,p))\n",
    "    L_neighboors=L_neighboors+(neighboors(world[p],q))\n",
    "    \n",
    "    if p>0:\n",
    "        if q>0:\n",
    "            L_neighboors.append(world[p-1][q-1])\n",
    "        if q<len(world[p])-1:\n",
    "            L_neighboors.append(world[p-1][q+1])\n",
    "    if p<len(world)-1:\n",
    "        if q>0:\n",
    "            L_neighboors.append(world[p+1][q-1])\n",
    "        if q<len(world[p])-1:\n",
    "            L_neighboors.append(world[p+1][q+1])\n",
    "                        \n",
    "    return L_neighboors\n",
    "\n",
    "def police_placement(world, target):\n",
    "    \n",
    "    a=100//police_rate\n",
    "    b=0\n",
    "    c=0\n",
    "    d=0\n",
    "    \n",
    "    if target==None:\n",
    "        while b<(police_rate/100)*longueur*largeur:\n",
    "            for i in world:\n",
    "                for j in i:\n",
    "                    c=c+1\n",
    "                    if c==a:\n",
    "                        policier_voisin=False\n",
    "                        for k in proximity(j.__dict__['x'],j.__dict__['y'],world):\n",
    "                            if k.__dict__['identifiant']=='police':\n",
    "                                policier_voisin=True\n",
    "                        if not policier_voisin:      \n",
    "                            j.__dict__['identifiant']='police'\n",
    "                            j.__dict__['proba_crime']=0\n",
    "                            j.__dict__['number_crime']=None\n",
    "                            b=b+1\n",
    "                            if b==(police_rate/100)*longueur*largeur:\n",
    "                                return world\n",
    "                        c=0\n",
    "        d=d+1\n",
    "        c=c//a*d\n",
    "    else:\n",
    "        while b<(police_rate/100)*(target[1]-target[0])*(target[3]-target[2]):\n",
    "            for i in world[target[0]:target[1]+1]:\n",
    "                for j in i[target[2]:target[3]+1]:\n",
    "                    c=c+1                    \n",
    "                    if c==a:\n",
    "                        policier_voisin=False\n",
    "                        for k in proximity(j.__dict__['x'],j.__dict__['y'],world):\n",
    "                            if k.__dict__['identifiant']=='police':\n",
    "                                policier_voisin=True\n",
    "                        if not policier_voisin:      \n",
    "                            j.__dict__['identifiant']='police'\n",
    "                            j.__dict__['proba_crime']=None\n",
    "                            j.__dict__['number_crime']=0\n",
    "                            b=b+1\n",
    "                            if b==(police_rate/100)*(target[1]-target[0])*(target[3]-target[2]):\n",
    "                                return world\n",
    "                        c=0\n",
    "        d=d+1\n",
    "        c=c//a*d\n",
    "            \n",
    "    return world\n",
    "\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "world=generate_spatial_world(longueur,largeur,False,None)\n",
    "world=(police_placement(world, [20,40,20,40]))\n",
    "world=crimes_comitted(world,temps)\n",
    "world=MAP(world,'number_crime')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "voici notre carte de 50 UA de long et 50 UA de large représentant le nombre de crimes commis en fonction de la zone sur une durée de 30 mois\n"
     ]
    }
   ],
   "source": [
    "import matplotlib as mpl\n",
    "norm = mpl.colors.Normalize(vmin=0,vmax=30)\n",
    "plt.imshow(world, cmap='hot',norm=norm, aspect=1, interpolation='spline16',alpha=1, origin='lower', extent=[0,longueur,0,largeur])\n",
    "\n",
    "plt.colorbar()\n",
    "plt.show()\n",
    "print ('voici notre carte de '+str(longueur)+' UA de long et '+str(largeur)+' UA de large représentant le nombre de crimes commis en fonction de la zone sur une durée de '+str(temps)+' mois')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'B' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-17-783fe369213c>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[1;32mimport\u001b[0m \u001b[0mmatplotlib\u001b[0m \u001b[1;32mas\u001b[0m \u001b[0mmpl\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mnorm\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmpl\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolors\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mNormalize\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mvmin\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mvmax\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m30\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mB\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcmap\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'hot'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mnorm\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnorm\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0maspect\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0minterpolation\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'antialiased'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0malpha\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0morigin\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'lower'\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mextent\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mlongueur\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m,\u001b[0m\u001b[0mlargeur\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m      4\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mcolorbar\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'B' is not defined"
     ]
    }
   ],
   "source": [
    "import matplotlib as mpl\n",
    "norm = mpl.colors.Normalize(vmin=0,vmax=30)\n",
    "plt.imshow(B, cmap='hot',norm=norm, aspect=1, interpolation='antialiased',alpha=1, origin='lower', extent=[0,longueur,0,largeur])\n",
    "\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.03]"
      ]
     },
     "execution_count": 210,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'antialiased', 'none', 'nearest', 'bilinear', 'spline16', 'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric', 'catrom', 'gaussian', 'bessel', 'mitchell', 'sinc', 'lanczos', 'blackman'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "class terrain:\n",
    "    \n",
    "    def __init__( self, n, m, choices):\n",
    "        \n",
    "        self.world=generate_spatial_world(n,m,choices)\n",
    "        \n",
    "    def generate_spatial_world(n,m,choices):\n",
    "        l=[]\n",
    "        for i in range (0,n):\n",
    "            l.append(generate_linear_world(m,choices))\n",
    "\n",
    "        return np.array(l)\n",
    "    \n",
    "   \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
